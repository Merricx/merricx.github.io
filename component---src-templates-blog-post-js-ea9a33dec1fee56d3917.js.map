{"version":3,"file":"component---src-templates-blog-post-js-ea9a33dec1fee56d3917.js","mappings":"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","sources":["webpack://merricx-blog/./i18n.js","webpack://merricx-blog/./src/assets/profile.png","webpack://merricx-blog/./src/components/Bio.js","webpack://merricx-blog/./src/components/Panel.js","webpack://merricx-blog/./src/components/SEO.js","webpack://merricx-blog/./src/utils/whitelist.js","webpack://merricx-blog/./src/utils/i18n.js","webpack://merricx-blog/./src/templates/blog-post.js","webpack://merricx-blog/./src/utils/helpers.js"],"sourcesContent":["// Please keep keys lowercase!\nexports.supportedLanguages = {\n  en: 'English',\n  id: 'Bahasa Indonesia'\n};\n","export default __webpack_public_path__ + \"static/profile-5674cb66c213bda81c05eec293977228.png\";","import React from 'react';\nimport profilePic from '../assets/profile.png';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Merricx`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 350 }}>\n          Blog that lazily written by <a href=\"/about\">merricx</a>.{' '}\n          &nbsp;Discuss about security, privacy, and cryptography.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} — Personal blog by Merricx`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","// Please keep keys lowercase!\nexport default {\n  'https://reactjs.org': {\n    'pt-br': 'https://pt-br.reactjs.org',\n    // other languages...\n  },\n  // other links...\n};\n","import { supportedLanguages } from \"./../../i18n\";\nimport whitelist from \"./whitelist\";\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\nexport const codeToLanguage = (code) =>\n  supportedLanguages[code].replace(/ /g, \" \" /* nbsp */);\n\nexport const loadFontsForCode = (code) => {\n  switch (code) {\n    case \"ru\":\n    case \"bg\":\n      import(\"../fonts/fonts-shared.cyrillic.css\");\n      import(\"../fonts/fonts-post.cyrillic.css\");\n      break;\n    case \"uk\":\n      import(\"../fonts/fonts-shared.cyrillic.css\");\n      import(\"../fonts/fonts-post.cyrillic.css\");\n      import(\"../fonts/fonts-shared.latin-ext.css\");\n      import(\"../fonts/fonts-post.latin-ext.css\");\n      break;\n    case \"cs\":\n    case \"da\":\n    case \"de\":\n    case \"es\":\n    case \"fi\":\n    case \"fr\":\n    case \"he\":\n    case \"hu\":\n    case \"it\":\n    case \"nl\":\n    case \"no\":\n    case \"pl\":\n    case \"pt-br\":\n    case \"sk\":\n    case \"sr\":\n    case \"sq\":\n    case \"sv\":\n    case \"tr\":\n      import(\"../fonts/fonts-shared.latin-ext.css\");\n      import(\"../fonts/fonts-post.latin-ext.css\");\n      break;\n    case \"vi\":\n      import(\"../fonts/fonts-shared.vietnamese.css\");\n      import(\"../fonts/fonts-post.vietnamese.css\");\n      break;\n    case \"fa\":\n      import(\"../fonts/fonts-post.persian.css\");\n      break;\n    case \"ar\":\n      import(\"../fonts/fonts-post.arabic.css\");\n      break;\n    default:\n      break;\n  }\n};\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug, lang) => {\n  const rawSlug = slug.replace(`${lang}/`, \"\");\n\n  return (targetLang) =>\n    targetLang === \"en\" ? rawSlug : `/${targetLang}${rawSlug}`;\n};\n\nexport const replaceAnchorLinksByLanguage = (html, code) => {\n  // Match any link using https://regexr.com/4airl\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm);\n\n  // Return same html if no matches were found\n  // or code isn't supported\n  if (!matches || !supportedLanguages[code]) {\n    return html;\n  }\n\n  matches.forEach((url) => {\n    // Replace to locale url if and only if exists in whitelist\n    // and has code registered\n    if (whitelist[url] && whitelist[url][code]) {\n      html = html.replace(url, whitelist[url][code]);\n    }\n  });\n\n  return html;\n};\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport get from \"lodash/get\";\n\nimport \"../fonts/fonts-post.css\";\nimport Bio from \"../components/Bio\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport Panel from \"../components/Panel\";\nimport { formatPostDate, formatReadingTime } from \"../utils/helpers\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n  replaceAnchorLinksByLanguage,\n} from \"../utils/i18n\";\n\nimport \"katex/dist/katex.min.css\";\n\nconst GITHUB_USERNAME = \"merricx\";\nconst GITHUB_REPO_NAME = \"blog\";\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nclass Translations extends React.Component {\n  render() {\n    let { translations, lang, languageLink, editUrl } = this.props;\n\n    let readerTranslations = translations.filter((lang) => lang !== \"ru\");\n    let hasRussianTranslation = translations.indexOf(\"ru\") !== -1;\n\n    return (\n      <div className=\"translations\">\n        <Panel style={{ fontFamily: systemFont }}>\n          {translations.length > 0 && (\n            <span>\n              {hasRussianTranslation && (\n                <span>\n                  Originally written in:{\" \"}\n                  {\"en\" === lang ? (\n                    <b>{codeToLanguage(\"en\")}</b>\n                  ) : (\n                    <Link to={languageLink(\"en\")}>English</Link>\n                  )}\n                  {\" • \"}\n                  {\"ru\" === lang ? (\n                    <b>Русский (авторский перевод)</b>\n                  ) : (\n                    <Link to={languageLink(\"ru\")}>\n                      Русский (авторский перевод)\n                    </Link>\n                  )}\n                  <br />\n                  <br />\n                </span>\n              )}\n              <span>Available other languages: </span>\n              {readerTranslations.map((l, i) => (\n                <React.Fragment key={l}>\n                  {l === lang ? (\n                    <b>{codeToLanguage(l)}</b>\n                  ) : (\n                    <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\n                  )}\n                  {i === readerTranslations.length - 1 ? \"\" : \" • \"}\n                </React.Fragment>\n              ))}\n            </span>\n          )}\n          {lang !== \"en\" && (\n            <>\n              <br />\n              <br />\n              {lang !== \"ru\" && (\n                <>\n                  <Link to={languageLink(\"en\")}>Read in English</Link>\n                  {\" • \"}\n                </>\n              )}\n              <Link to={`/${lang}`}>View all translated posts</Link>{\" \"}\n            </>\n          )}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, \"data.site.siteMetadata.title\");\n    let { previous, next, slug, translations, translatedLinks } =\n      this.props.pageContext;\n    const lang = post.fields.langKey;\n\n    // Replace original links with translated when available.\n    let html = post.html;\n\n    // Replace original anchor links by lang when available in whitelist\n    // see utils/whitelist.js\n    html = replaceAnchorLinksByLanguage(html, lang);\n\n    translatedLinks.forEach((link) => {\n      // jeez\n      function escapeRegExp(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n      }\n      let translatedLink = \"/\" + lang + link;\n      html = html.replace(\n        new RegExp('\"' + escapeRegExp(link) + '\"', \"g\"),\n        '\"' + translatedLink + '\"'\n      );\n    });\n\n    translations = translations.slice();\n    translations.sort((a, b) => {\n      return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1;\n    });\n\n    loadFontsForCode(lang);\n    // TODO: this curried function is annoying\n    const languageLink = createLanguageLink(slug, lang);\n    const enSlug = languageLink(\"en\");\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === \"en\" ? \"\" : \".\" + lang}.md`;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <main>\n          <article>\n            <header>\n              <h1 style={{ color: \"var(--textTitle)\" }}>\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: \"block\",\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date, lang)}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n              {translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n          </article>\n        </main>\n        <aside>\n          <hr\n            style={{\n              color: \"rgba(210, 214, 220, 0.5)\",\n              backgroundColor: \"rgba(210, 214, 220, 0.5)\",\n              height: 2,\n            }}\n          />\n          <h3\n            style={{\n              fontFamily: \"Montserrat, sans-serif\",\n              marginTop: rhythm(0.25),\n            }}\n          ></h3>\n          <Bio />\n          <hr\n            style={{\n              color: \"rgba(210, 214, 220, 0.5)\",\n              backgroundColor: \"rgba(210, 214, 220, 0.5)\",\n              height: 2,\n            }}\n          />\n          <nav>\n            <ul\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n                listStyle: \"none\",\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n        cta\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n"],"names":["exports","en","id","Bio","render","style","display","src","profilePic","alt","marginRight","rhythm","marginBottom","width","height","borderRadius","maxWidth","href","React","children","fontSize","border","padding","background","wordBreak","SEO","meta","image","title","description","slug","lang","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","codeToLanguage","code","supportedLanguages","replace","Translations","translations","languageLink","editUrl","this","props","readerTranslations","filter","hasRussianTranslation","indexOf","className","Panel","fontFamily","length","Link","to","map","l","i","key","BlogPostTemplate","post","markdownRemark","siteTitle","get","previous","next","translatedLinks","pageContext","fields","langKey","html","matches","match","forEach","whitelist","replaceAnchorLinksByLanguage","link","translatedLink","RegExp","slice","sort","a","b","loadFontsForCode","rawSlug","targetLang","createLanguageLink","enSlug","Layout","location","frontmatter","spoiler","color","scale","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","backgroundColor","flexWrap","justifyContent","listStyle","rel","minutes","cups","Math","round","Array","E","fill","join","Date","prototype","toLocaleDateString","args","day","month","year","Boolean"],"sourceRoot":""}