{"version":3,"file":"component---src-templates-blog-index-js-f7b961963a2a2637cf37.js","mappings":"0JAE6C,IAEvCA,EAAG,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAyBN,OAzBMC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACPC,OAAA,WACE,OACEC,EAAAA,cAAA,OACEC,MAAO,CACLC,QAAS,SAGXF,EAAAA,cAAA,OACEG,IAAKC,EAAAA,EACLC,IAAK,UACLJ,MAAO,CACLK,aAAaC,EAAAA,EAAAA,IAAO,IACpBC,aAAc,EACdC,OAAOF,EAAAA,EAAAA,IAAO,GACdG,QAAQH,EAAAA,EAAAA,IAAO,GACfI,aAAc,SAGlBX,EAAAA,cAAA,KAAGC,MAAO,CAAEW,SAAU,MAAO,+BACCZ,EAAAA,cAAA,KAAGa,KAAK,UAAS,WAAW,IAAE,IAAI,uDAKtE,EAACpB,CAAA,CAzBM,CAASO,EAAAA,WA4BlB,K,4FChCO,SAASc,EAAkBC,GAChC,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,GAEhC,OAAIC,EAAO,EACF,GAAG,IAAIG,MAAMF,KAAKC,MAAMF,EAAOC,KAAKG,IACxCC,KAAK,MACLC,KAAK,OAAOP,aAER,GAAG,IAAII,MAAMH,GAAQ,GAAGK,KAAK,MAAMC,KAAK,OAAOP,YAE1D,CAGO,SAASQ,EAAeC,EAAMC,GAAO,IAADC,EACzC,GAAiD,mBAAtCC,KAAK7B,UAAU8B,mBACxB,OAAOJ,EAGTA,EAAO,IAAIG,KAAKH,GAChB,MAAMK,EAAO,CACXJ,EACA,CAAEK,IAAK,UAAWC,MAAO,OAAQC,KAAM,YACvCC,OAAOC,SACT,OAAOR,EAAAF,GAAKI,mBAAkBjC,MAAA+B,GAAAS,EAAAA,EAAAA,GAAIN,GACpC,C,yDCHA,SAASO,EAAGC,GAA0D,IAAzD,KAAEC,EAAI,MAAEC,EAAK,MAAEC,EAAK,YAAEC,EAAW,KAAEC,EAAI,KAAEjB,EAAO,MAAMY,EACjE,OACErC,EAAAA,cAAC2C,EAAAA,YAAW,CACVC,MAnBK,YAoBL7C,OAAQ8C,IACN,MAAM,aAAEC,GAAiBD,EAAKE,KACxBC,EAAkBP,GAAeK,EAAaL,YAC9CQ,EAAYV,EAAQ,GAAGO,EAAaI,WAAWX,IAAU,KACzDY,EAAM,GAAGL,EAAaI,UAAUR,IACtC,OACE1C,EAAAA,cAACoD,EAAAA,EAAMC,OAAAC,OAAA,CACLC,eAAgB,CAAE9B,SACbe,EACD,CACEgB,cAAe,QAAQV,EAAaN,QACpCA,SAEF,CACEA,MAAO,GAAGM,EAAaN,oCACxB,CACLF,KAAM,CACJ,CACEmB,KAAM,cACNC,QAASV,GAEX,CACEW,SAAU,SACVD,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASlB,GAASM,EAAaN,OAEjC,CACEmB,SAAU,iBACVD,QAASV,GAEX,CACES,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASZ,EAAac,OAAOC,SAE/B,CACEJ,KAAM,gBACNC,QAASlB,GAASM,EAAaN,OAEjC,CACEiB,KAAM,sBACNC,QAASV,IAGVc,OACCb,EACI,CACE,CACEU,SAAU,WACVD,QAAST,GAEX,CACEQ,KAAM,gBACNC,QAAST,IAGb,IAELa,OAAOxB,KACV,GAKZ,CAEAF,EAAI2B,aAAe,CACjBzB,KAAM,GACNE,MAAO,GACPE,KAAM,IAWR,K,uBC/GA,IAAe,IAA0B,qD,kICEI,IAEvCsB,EAAM,SAAAtE,GAAA,SAAAsE,IAAA,OAAAtE,EAAAC,MAAA,KAAAC,YAAA,KAkCT,OAlCSC,EAAAA,EAAAA,GAAAmE,EAAAtE,GAAAsE,EAAAlE,UACVC,OAAA,WACE,OACEC,EAAAA,cAAA,UACEC,MAAO,CACLgE,WAAW1D,EAAAA,EAAAA,IAAO,KAClB2D,YAAY3D,EAAAA,EAAAA,IAAO,KAGrBP,EAAAA,cAAA,KACEa,KAAK,+BACLsD,OAAO,SACPC,IAAI,uBACL,WAEI,IAAI,IACF,IACPpE,EAAAA,cAAA,KACEa,KAAK,6BACLsD,OAAO,SACPC,IAAI,uBACL,UAEI,IAAI,IACF,IACPpE,EAAAA,cAAA,KACEa,KAAK,uBACLsD,OAAO,SACPC,IAAI,uBACL,SAKP,EAACJ,CAAA,CAlCS,CAAShE,EAAAA,WAqCrB,Q,iDC/B6C,IAEvCqE,EAAiB,SAAA3E,GAAA,SAAA2E,IAAA,OAAA3E,EAAAC,MAAA,KAAAC,YAAA,KAqDpB,OArDoBC,EAAAA,EAAAA,GAAAwE,EAAA3E,GAAA2E,EAAAvE,UACrBC,OAAA,WACE,MAAMuE,EAAYC,IAAIC,KAAM,sCACtBC,EAAUD,KAAKE,MAAMC,YAAYF,QAEjCG,EAAQL,IAAIC,KAAM,sCAExB,OACExE,EAAAA,cAAC6E,EAAAA,EAAM,CAACC,SAAUN,KAAKE,MAAMI,SAAUtC,MAAO8B,GAC5CtE,EAAAA,cAACoC,EAAAA,EAAG,MACJpC,EAAAA,cAAA,aACEA,EAAAA,cAACP,EAAAA,EAAG,OAENO,EAAAA,cAAA,YACe,OAAZyE,GAAgC,OAAZA,GACnBzE,EAAAA,cAAC+E,EAAAA,EAAK,KAAC,sCAGRH,EAAMI,KAAI3C,IAAe,IAAd,KAAE4C,GAAM5C,EAClB,MAAMG,EAAQ+B,IAAIU,EAAM,sBAAwBA,EAAKC,OAAOxC,KAC5D,OACE1C,EAAAA,cAAA,WAASmF,IAAKF,EAAKC,OAAOxC,MACxB1C,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEC,MAAO,CACLmF,WAAY,yBACZC,UAAU9E,EAAAA,EAAAA,IAAO,GACjBC,cAAcD,EAAAA,EAAAA,IAAO,EAAI,KAG3BP,EAAAA,cAACsF,EAAAA,KAAI,CACHrF,MAAO,CAAEsF,UAAW,QACpBC,GAAIP,EAAKC,OAAOxC,KAChB0B,IAAI,YAEH5B,IAGLxC,EAAAA,cAAA,cACGuB,EAAAA,EAAAA,GAAe0D,EAAKQ,YAAYjE,KAAMiD,GACtC,OAAM3D,EAAAA,EAAAA,GAAkBmE,EAAKS,gBAGlC1F,EAAAA,cAAA,KACE2F,wBAAyB,CAAEC,OAAQX,EAAKQ,YAAYI,WAE9C,KAIhB7F,EAAAA,cAACgE,EAAM,MAGb,EAACK,CAAA,CArDoB,CAASrE,EAAAA,WAwDhC,O,qCChDA,IAlBA,SAAcqC,GAA4B,IAA3B,SAAEyD,EAAQ,MAAE7F,EAAQ,CAAC,GAAGoC,EACrC,OACErC,EAAAA,cAAA,KACEC,MAAO,CACLoF,SAAU,QACVU,OAAQ,sBACRpF,aAAc,SACdqF,QAAS,SACTC,WAAY,uBACZC,UAAW,cACRjG,IAGJ6F,EAGP,C","sources":["webpack://merricx-blog/./src/components/Bio.js","webpack://merricx-blog/./src/utils/helpers.js","webpack://merricx-blog/./src/components/SEO.js","webpack://merricx-blog/./src/assets/profile.png","webpack://merricx-blog/./src/components/Footer.js","webpack://merricx-blog/./src/templates/blog-index.js","webpack://merricx-blog/./src/components/Panel.js"],"sourcesContent":["import React from 'react';\nimport profilePic from '../assets/profile.png';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Merricx`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 350 }}>\n          Blog that lazily written by <a href=\"/about\">merricx</a>.{' '}\n          &nbsp;Discuss about security, privacy, and cryptography.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('üç±')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('‚òïÔ∏è').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s ‚Äî ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} ‚Äî Personal blog by Merricx`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","export default __webpack_public_path__ + \"static/profile-5674cb66c213bda81c05eec293977228.png\";","import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <a\n          href=\"https://twitter.com/merrricx\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/merricx\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"mailto:imam@merri.cx\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          email\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from \"gatsby\";\nimport { formatPostDate, formatReadingTime } from \"../utils/helpers\";\n\nimport Bio from \"../components/Bio\";\nimport Footer from \"../components/Footer\";\nimport Layout from \"../components/Layout\";\nimport Panel from \"../components/Panel\";\nimport React from \"react\";\nimport SEO from \"../components/SEO\";\nimport get from \"lodash/get\";\nimport { rhythm } from \"../utils/typography\";\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, \"props.data.site.siteMetadata.title\");\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, \"props.data.allMarkdownRemark.edges\");\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {langKey !== \"en\" && langKey !== \"ru\" && (\n            <Panel>Articles that have been translated</Panel>\n          )}\n\n          {posts.map(({ node }) => {\n            const title = get(node, \"frontmatter.title\") || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: \"Montserrat, sans-serif\",\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: \"none\" }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` ‚Ä¢ ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query ($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n"],"names":["Bio","_React$Component","apply","arguments","_inheritsLoose","prototype","render","React","style","display","src","profilePic","alt","marginRight","rhythm","marginBottom","width","height","borderRadius","maxWidth","href","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","lang","_date","Date","toLocaleDateString","args","day","month","year","filter","Boolean","_toConsumableArray","SEO","_ref","meta","image","title","description","slug","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","Helmet","Object","assign","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Footer","marginTop","paddingTop","target","rel","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","Panel","map","node","fields","key","fontFamily","fontSize","Link","boxShadow","to","frontmatter","timeToRead","dangerouslySetInnerHTML","__html","spoiler","children","border","padding","background","wordBreak"],"sourceRoot":""}