{"version":3,"file":"component---src-templates-blog-post-js-ebad216976cc3c370b2b.js","mappings":"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","sources":["webpack://merricx-blog/./src/components/Bio.js","webpack://merricx-blog/./i18n.js","webpack://merricx-blog/./src/utils/helpers.js","webpack://merricx-blog/./src/components/SEO.js","webpack://merricx-blog/./src/assets/profile.png","webpack://merricx-blog/./src/components/Panel.js","webpack://merricx-blog/./src/utils/whitelist.js","webpack://merricx-blog/./src/utils/i18n.js","webpack://merricx-blog/./src/templates/blog-post.js"],"sourcesContent":["import React from 'react';\nimport profilePic from '../assets/profile.png';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Merricx`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 350 }}>\n          Blog that lazily written by <a href=\"/about\">merricx</a>.{' '}\n          &nbsp;Discuss about security, privacy, and cryptography.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","// Please keep keys lowercase!\nexports.supportedLanguages = {\n  en: 'English',\n  id: 'Bahasa Indonesia'\n};\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('üç±')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('‚òïÔ∏è').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s ‚Äî ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} ‚Äî Personal blog by Merricx`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","export default __webpack_public_path__ + \"static/profile-5674cb66c213bda81c05eec293977228.png\";","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","// Please keep keys lowercase!\nexport default {\n  'https://reactjs.org': {\n    'pt-br': 'https://pt-br.reactjs.org',\n    // other languages...\n  },\n  // other links...\n};\n","import { supportedLanguages } from \"./../../i18n\";\nimport whitelist from \"./whitelist\";\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\nexport const codeToLanguage = (code) =>\n  supportedLanguages[code].replace(/ /g, \" \" /* nbsp */);\n\nexport const loadFontsForCode = (code) => {\n  switch (code) {\n    case \"ru\":\n    case \"bg\":\n      import(\"../fonts/fonts-shared.cyrillic.css\");\n      import(\"../fonts/fonts-post.cyrillic.css\");\n      break;\n    case \"uk\":\n      import(\"../fonts/fonts-shared.cyrillic.css\");\n      import(\"../fonts/fonts-post.cyrillic.css\");\n      import(\"../fonts/fonts-shared.latin-ext.css\");\n      import(\"../fonts/fonts-post.latin-ext.css\");\n      break;\n    case \"cs\":\n    case \"da\":\n    case \"de\":\n    case \"es\":\n    case \"fi\":\n    case \"fr\":\n    case \"he\":\n    case \"hu\":\n    case \"it\":\n    case \"nl\":\n    case \"no\":\n    case \"pl\":\n    case \"pt-br\":\n    case \"sk\":\n    case \"sr\":\n    case \"sq\":\n    case \"sv\":\n    case \"tr\":\n      import(\"../fonts/fonts-shared.latin-ext.css\");\n      import(\"../fonts/fonts-post.latin-ext.css\");\n      break;\n    case \"vi\":\n      import(\"../fonts/fonts-shared.vietnamese.css\");\n      import(\"../fonts/fonts-post.vietnamese.css\");\n      break;\n    case \"fa\":\n      import(\"../fonts/fonts-post.persian.css\");\n      break;\n    case \"ar\":\n      import(\"../fonts/fonts-post.arabic.css\");\n      break;\n    default:\n      break;\n  }\n};\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug, lang) => {\n  const rawSlug = slug.replace(`${lang}/`, \"\");\n\n  return (targetLang) =>\n    targetLang === \"en\" ? rawSlug : `/${targetLang}${rawSlug}`;\n};\n\nexport const replaceAnchorLinksByLanguage = (html, code) => {\n  // Match any link using https://regexr.com/4airl\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm);\n\n  // Return same html if no matches were found\n  // or code isn't supported\n  if (!matches || !supportedLanguages[code]) {\n    return html;\n  }\n\n  matches.forEach((url) => {\n    // Replace to locale url if and only if exists in whitelist\n    // and has code registered\n    if (whitelist[url] && whitelist[url][code]) {\n      html = html.replace(url, whitelist[url][code]);\n    }\n  });\n\n  return html;\n};\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport get from \"lodash/get\";\n\nimport \"../fonts/fonts-post.css\";\nimport Bio from \"../components/Bio\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport Panel from \"../components/Panel\";\nimport { formatPostDate, formatReadingTime } from \"../utils/helpers\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n  replaceAnchorLinksByLanguage,\n} from \"../utils/i18n\";\n\nimport \"katex/dist/katex.min.css\";\n\nconst GITHUB_USERNAME = \"merricx\";\nconst GITHUB_REPO_NAME = \"blog\";\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nclass Translations extends React.Component {\n  render() {\n    let { translations, lang, languageLink, editUrl } = this.props;\n\n    let readerTranslations = translations.filter((lang) => lang !== \"ru\");\n    let hasRussianTranslation = translations.indexOf(\"ru\") !== -1;\n\n    return (\n      <div className=\"translations\">\n        <Panel style={{ fontFamily: systemFont }}>\n          {translations.length > 0 && (\n            <span>\n              {hasRussianTranslation && (\n                <span>\n                  Originally written in:{\" \"}\n                  {\"en\" === lang ? (\n                    <b>{codeToLanguage(\"en\")}</b>\n                  ) : (\n                    <Link to={languageLink(\"en\")}>English</Link>\n                  )}\n                  {\" ‚Ä¢ \"}\n                  {\"ru\" === lang ? (\n                    <b>–†—É—Å—Å–∫–∏–π (–∞–≤—Ç–æ—Ä—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥)</b>\n                  ) : (\n                    <Link to={languageLink(\"ru\")}>\n                      –†—É—Å—Å–∫–∏–π (–∞–≤—Ç–æ—Ä—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥)\n                    </Link>\n                  )}\n                  <br />\n                  <br />\n                </span>\n              )}\n              <span>Available other languages: </span>\n              {readerTranslations.map((l, i) => (\n                <React.Fragment key={l}>\n                  {l === lang ? (\n                    <b>{codeToLanguage(l)}</b>\n                  ) : (\n                    <Link to={languageLink(l)}>{codeToLanguage(l)}</Link>\n                  )}\n                  {i === readerTranslations.length - 1 ? \"\" : \" ‚Ä¢ \"}\n                </React.Fragment>\n              ))}\n            </span>\n          )}\n          {lang !== \"en\" && (\n            <>\n              <br />\n              <br />\n              {lang !== \"ru\" && (\n                <>\n                  <Link to={languageLink(\"en\")}>Read in English</Link>\n                  {\" ‚Ä¢ \"}\n                </>\n              )}\n              <Link to={`/${lang}`}>View all translated posts</Link>{\" \"}\n            </>\n          )}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, \"data.site.siteMetadata.title\");\n    let { previous, next, slug, translations, translatedLinks } =\n      this.props.pageContext;\n    const lang = post.fields.langKey;\n\n    // Replace original links with translated when available.\n    let html = post.html;\n\n    // Replace original anchor links by lang when available in whitelist\n    // see utils/whitelist.js\n    html = replaceAnchorLinksByLanguage(html, lang);\n\n    translatedLinks.forEach((link) => {\n      // jeez\n      function escapeRegExp(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n      }\n      let translatedLink = \"/\" + lang + link;\n      html = html.replace(\n        new RegExp('\"' + escapeRegExp(link) + '\"', \"g\"),\n        '\"' + translatedLink + '\"'\n      );\n    });\n\n    translations = translations.slice();\n    translations.sort((a, b) => {\n      return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1;\n    });\n\n    loadFontsForCode(lang);\n    // TODO: this curried function is annoying\n    const languageLink = createLanguageLink(slug, lang);\n    const enSlug = languageLink(\"en\");\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${enSlug.slice(\n      1,\n      enSlug.length - 1\n    )}/index${lang === \"en\" ? \"\" : \".\" + lang}.md`;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n        />\n        <main>\n          <article>\n            <header>\n              <h1 style={{ color: \"var(--textTitle)\" }}>\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: \"block\",\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date, lang)}\n                {` ‚Ä¢ ${formatReadingTime(post.timeToRead)}`}\n              </p>\n              {translations.length > 0 && (\n                <Translations\n                  translations={translations}\n                  editUrl={editUrl}\n                  languageLink={languageLink}\n                  lang={lang}\n                />\n              )}\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n          </article>\n        </main>\n        <aside>\n          <hr\n            style={{\n              color: \"rgba(210, 214, 220, 0.5)\",\n              backgroundColor: \"rgba(210, 214, 220, 0.5)\",\n              height: 2,\n            }}\n          />\n          <h3\n            style={{\n              fontFamily: \"Montserrat, sans-serif\",\n              marginTop: rhythm(0.25),\n            }}\n          ></h3>\n          <Bio />\n          <hr\n            style={{\n              color: \"rgba(210, 214, 220, 0.5)\",\n              backgroundColor: \"rgba(210, 214, 220, 0.5)\",\n              height: 2,\n            }}\n          />\n          <nav>\n            <ul\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n                listStyle: \"none\",\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ‚Üê {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} ‚Üí\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n        cta\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n"],"names":["Bio","_React$Component","apply","arguments","_inheritsLoose","prototype","render","React","style","display","src","profilePic","alt","marginRight","rhythm","marginBottom","width","height","borderRadius","maxWidth","href","exports","en","id","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","lang","_date","Date","toLocaleDateString","args","day","month","year","filter","Boolean","_toConsumableArray","SEO","_ref","meta","image","title","description","slug","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","Helmet","Object","assign","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","children","fontSize","border","padding","background","wordBreak","codeToLanguage","code","supportedLanguages","replace","Translations","translations","languageLink","editUrl","this","props","readerTranslations","hasRussianTranslation","indexOf","className","Panel","fontFamily","length","Link","to","map","l","i","key","BlogPostTemplate","_React$Component2","post","markdownRemark","siteTitle","get","previous","next","translatedLinks","pageContext","fields","langKey","html","replaceAnchorLinksByLanguage","matches","match","forEach","whitelist","link","translatedLink","RegExp","slice","sort","a","b","loadFontsForCode","createLanguageLink","rawSlug","targetLang","enSlug","Layout","location","frontmatter","spoiler","color","scale","marginTop","timeToRead","dangerouslySetInnerHTML","__html","backgroundColor","flexWrap","justifyContent","listStyle","rel"],"sourceRoot":""}